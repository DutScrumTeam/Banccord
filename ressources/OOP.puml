@startuml
!theme cyborg

class BDDUtils {
     private BDDUtils instance

     private BDDUtils(): BDDUtils
     public connect(password, login): boolean | Client
     public execute(PDOStatement)
}

class Preparator {
    private Preparator instance
    private Preparator()
    public getInstance()
    public prepare(SQLType,Table,Object)
}

interface Table {
    private ArrayList<Param> params
    public getParams()
}

class Param{
    private string name
    private Integer number
    private PDO:: ParamSTR type
}

interface SQLType {
    private getString(Table)
}
SQLType <|-- Insert
SQLType <|-- Remove
SQLType <|-- Update
SQLType <|-- Select

class Insert{
}
class Remove{
}
class Update{
}

enum FileFormat {
    XLS,
    CSV,
    PDF
}

interface Client {
    private login: string

    public getLogin(): string
    public getGraphUnpaid(): string
    public dataToFile(fileFormat: FileFormat): void
}

class ClientPO {
    public getAllInfos(): string
    public getClientInfos(string login): string
}

class ClientUser {
    public getInfos(): string
}

class ClientAdmin {
    public deleteClient(string login): boolean
    public createClient(string login): boolean
}

class ClientManager {
    public getAllInfos(): string
}

Client <|-- ClientPO
Client <|-- ClientUser
Client <|-- ClientAdmin
Client <|-- ClientManager

@enduml

abstract class AbstractList
abstract AbstractCollection
interface List
interface Collection

List <|-- AbstractList
Collection <|-- AbstractCollection

Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|-- ArrayList

class ArrayList {
Object[] elementData
size()
}

enum TimeUnit {
MINUTES
DAYS
HOURS
}

